trigger: 'none' # will disable CI builds entirely
# - master
pr: none
# - master
# - releases/*

jobs:
- job: WebApp
  displayName: 'Build Web App'
  # pool:
  #   vmImage: 'windows-2019'
  
  strategy:
    matrix:
      magniuz-MBP:
        AGENT_NAME: magniuz-MBP
  
  pool: 
    name: Default
    demands:
    - agent.name -equals $(AGENT_NAME)

  variables:
    BuildConfiguration: release
    PoolName: Default
    
  
  # steps:
  
  # - task: UseDotNet@2
  #   displayName: Install .NET 6 sdk
  #   inputs:
  #     packageType: sdk
  #     version: 6.0.x
  #     installationPath: $(Agent.ToolsDirectory)/dotnet

  # - task: DotNetCoreCLI@2
  #   displayName: Restore
  #   inputs:
  #     command: restore
  #     projects: '**/WebApp.csproj'
  
  # - powershell: |
  #    $paths = Get-ChildItem -include *.csproj -Recurse
  #    foreach($pathobject in $paths) 
  #    {
  #        $path = $pathobject.fullname
  #        $doc = New-Object System.Xml.XmlDocument
  #        $doc.Load($path)
  #        $child = $doc.CreateElement("ProjectGuid")
  #        $child.InnerText = [guid]::NewGuid().ToString().ToUpper()
  #        $node = $doc.SelectSingleNode("//Project/PropertyGroup")
  #        $node.AppendChild($child)
  #        $doc.Save($path)
  #    }
  #   workingDirectory: WebApp
  #   displayName: 'PS : Add Project GUID'
  #   enabled: false
  
  # # - task: SonarCloudPrepare@1
  # #   displayName: 'Prepare analysis on SonarCloud'
  # #   inputs:
  # #     SonarCloud: SonarCloud
  # #     organization: WebAppDbDemo
  # #     projectKey: WebAppDbDemo-1
  
  # - task: DotNetCoreCLI@2
  #   displayName: Build
  #   inputs:
  #     projects: '**/WebApp.csproj'
  #     arguments: '--configuration $(BuildConfiguration)'
  
  # - task: DotNetCoreCLI@2
  #   displayName: Test
  #   inputs:
  #     command: test
  #     projects: '**/*UnitTest*.csproj'
  #     arguments: '--configuration $(BuildConfiguration)'
  
  # - task: DotNetCoreCLI@2
  #   displayName: Publish
  #   inputs:
  #     command: publish
  #     publishWebProjects: True
  #     arguments: '--configuration $(BuildConfiguration) --output $(build.artifactstagingdirectory)'
  #     zipAfterPublish: True
  
  # - task: SonarCloudAnalyze@1
  #   displayName: 'Run Code Analysis'
  
  # - task: SonarCloudPublish@1
  #   displayName: 'Publish Quality Gate Result'
  
  # - task: PublishBuildArtifacts@1
  #   displayName: 'Publish Artifact (WebApp.zip)'
  #   inputs:
  #     PathtoPublish: '$(build.artifactstagingdirectory)'

- job: Database
  displayName: 'Build Database'

  strategy:
    matrix:
      magniuz-MBP:
        AGENT_NAME: magniuz-MBP

  pool:
    name: Default
    demands:
    - agent.name -equals $(AGENT_NAME)
    # vmImage: 'windows-2019'

  steps:
  - task: MSBuild@1
    displayName: 'Build solution WebApp.Database.sqlproj'
    inputs:
      solution: WebApp.Database/WebApp.Database.sqlproj
      msbuildArguments: '/p:OutDir=$(Build.ArtifactStagingDirectory)'
  
  - task: PublishBuildArtifacts@1
    displayName: 'Publish Artifact (Dacpac)'
    inputs:
      ArtifactName: dacpac

- job: Selenium
  displayName: 'Build UI Tests'
  
  strategy:
    matrix:
      magniuz-MBP:
        AGENT_NAME: magniuz-MBP
        
  pool:
    name: Default
    demands:
    - agent.name -equals $(AGENT_NAME)
    # vmImage: 'windows-2019'

  steps:
  - task: NuGetToolInstaller@0
    displayName: 'Use NuGet 4.3.0'

  - task: NuGetCommand@2
    displayName: 'NuGet restore'
    inputs:
      restoreSolution: WebAppWithDatabase.sln

  - task: MSBuild@1
    displayName: 'Build project SeleniumUiTests.csproj'
    inputs:
      solution: SeleniumUiTests/SeleniumUiTests.csproj
      msbuildArguments: '/p:OutDir=$(Build.ArtifactStagingDirectory)'

  - task: PublishBuildArtifacts@1
    displayName: 'Publish Artifact: UI-Test'
    inputs:
      ArtifactName: 'UI-Test'

- job: Infrastructure
  displayName: 'Copy Infrastructure files (ARM)'
  pool:
    name: Default
    demands:
    - agent.name -equals magniuz-MBP
    # vmImage: 'ubuntu-latest'
  steps:
  - task: PublishBuildArtifacts@1
    displayName: 'Publish Artifact: ARM templates'
    inputs:
      PathtoPublish: AzureResourceGroupDeployment
      ArtifactName: arm